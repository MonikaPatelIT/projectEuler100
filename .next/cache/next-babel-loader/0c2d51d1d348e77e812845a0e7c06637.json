{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpatel\\\\source\\\\project\\\\projectEuler100\\\\Component\\\\Problem002\\\\Problem002.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Problem002 = function Problem002() {\n  function fibonacci(n) {\n    return n <= 1 ? 1 : n == 2 ? 2 : fibonacci(n - 1) + fibonacci(n - 2);\n  }\n\n  console.log(fibonacci(4));\n  var count = 1;\n  var arr_fib = [];\n\n  while (fibonacci(count) < 4000000) {\n    arr_fib.push(fibonacci(count));\n    count++;\n  }\n\n  console.log(arr_fib);\n  var arr_fib_even = [];\n  arr_fib.map(function (data) {\n    if (data % 2 == 0) {\n      arr_fib_even.push(data);\n    }\n  });\n  console.log(arr_fib_even);\n  var arr_fib_even_sum = arr_fib_even.reduce(function (a, r) {\n    return a + r;\n  });\n  console.log(arr_fib_even_sum);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Even Fibonacci numbers\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Problem 2\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Solution\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, arr_fib_even_sum)));\n};\n\nexport default Problem002;","map":{"version":3,"sources":["C:/Users/mpatel/source/project/projectEuler100/Component/Problem002/Problem002.js"],"names":["Problem002","fibonacci","n","console","log","count","arr_fib","push","arr_fib_even","map","data","arr_fib_even_sum","reduce","a","r"],"mappings":";;;;AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WAASC,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,WAAOA,CAAC,IAAI,CAAL,GAAS,CAAT,GACAA,CAAC,IAAI,CAAL,GAAS,CAAT,GACAD,SAAS,CAACC,CAAC,GAAG,CAAL,CAAT,GAAmBD,SAAS,CAACC,CAAC,GAAG,CAAL,CAFnC;AAGF;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAAC,CAAD,CAArB;AACA,MAAII,KAAK,GAAG,CAAZ;AACA,MAAIC,OAAO,GAAC,EAAZ;;AACC,SAAML,SAAS,CAACI,KAAD,CAAT,GAAiB,OAAvB,EAA+B;AAC/BC,IAAAA,OAAO,CAACC,IAAR,CAAaN,SAAS,CAACI,KAAD,CAAtB;AACAA,IAAAA,KAAK;AACJ;;AAEDF,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACD,MAAKE,YAAY,GAAG,EAApB;AACCF,EAAAA,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI,EAAG;AACnB,QAAGA,IAAI,GAAE,CAAN,IAAU,CAAb,EAAe;AACfF,MAAAA,YAAY,CAACD,IAAb,CAAkBG,IAAlB;AACC;AACA,GAJD;AAMAP,EAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;AAED,MAAIG,gBAAgB,GAAEH,YAAY,CAACI,MAAb,CAAoB,UAACC,CAAD,EAAGC,CAAH;AAAA,WAAQD,CAAC,GAACC,CAAV;AAAA,GAApB,CAAtB;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYO,gBAAZ;AAEC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8TAHF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,gBAAJ,CAXF,CADF,CADF;AAiBD,CA7CD;;AA+CA,eAAeX,UAAf","sourcesContent":["const Problem002 = () => {\r\n  function fibonacci(n) {\r\n    return n <= 1 ? 1\r\n         : n == 2 ? 2\r\n         : fibonacci(n - 1) + fibonacci(n - 2);\r\n }\r\n \r\n console.log(fibonacci(4));\r\n let count = 1;\r\n let arr_fib=[];\r\n  while(fibonacci(count)<4000000){\r\n  arr_fib.push(fibonacci(count));\r\n  count++\r\n  }\r\n  \r\n  console.log(arr_fib);\r\n let  arr_fib_even = []; \r\n  arr_fib.map(data =>{\r\n  if(data %2 ==0){\r\n  arr_fib_even.push(data);\r\n  }\r\n  } )\r\n  \r\n  console.log(arr_fib_even);\r\n  \r\n let arr_fib_even_sum= arr_fib_even.reduce((a,r)=> a+r);\r\n console.log(arr_fib_even_sum);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Even Fibonacci numbers</h3>\r\n        <span>Problem 2</span>\r\n        <p>\r\n        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\r\n\r\n1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\r\n\r\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\r\n        </p>\r\n        <span>Solution</span>\r\n        <p>{arr_fib_even_sum}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Problem002;\r\n"]},"metadata":{},"sourceType":"module"}