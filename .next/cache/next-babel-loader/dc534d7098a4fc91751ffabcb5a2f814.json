{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpatel\\\\source\\\\project\\\\projectEuler100\\\\Component\\\\Problem003\\\\Problem003.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst Problem003 = () => {\n  const is_Prime = num => {\n    for (let i = 2; i < Math.sqrt(num); i++) {\n      if (num % i == 0) return false;\n      return true;\n    }\n  };\n\n  let factors = [];\n\n  const prime_factors = num => {\n    for (let i = 2; i <= num; i++) {\n      while (is_Prime(i) && num % i === 0) {\n        if (!factors.includes(i)) factors.push(i);\n        num /= i;\n      }\n    }\n\n    return factors;\n  };\n\n  console.log(prime_factors(600851475143)); // all prime factors\n\n  let max_prime_factors = factors.reduce((a, b) => a > b ? a : b); // max prime factors\n\n  console.log(max_prime_factors);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Largest prime factor\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Problem 3\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"The prime factors of 13195 are 5, 7, 13 and 29. What is the largest prime factor of the number 600851475143 ?\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Solution\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, max_prime_factors)));\n};\n\nexport default Problem003;","map":{"version":3,"sources":["C:/Users/mpatel/source/project/projectEuler100/Component/Problem003/Problem003.js"],"names":["Problem003","is_Prime","num","i","Math","sqrt","factors","prime_factors","includes","push","console","log","max_prime_factors","reduce","a","b"],"mappings":";;;;AAAA,MAAMA,UAAU,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAGC,GAAG,IAAI;AACtB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUH,GAAV,CAApB,EAAoCC,CAAC,EAArC,EAAyC;AACvC,UAAID,GAAG,GAAGC,CAAN,IAAW,CAAf,EAAkB,OAAO,KAAP;AAElB,aAAO,IAAP;AACD;AACF,GAND;;AAQA,MAAIG,OAAO,GAAG,EAAd;;AACA,QAAMC,aAAa,GAAGL,GAAG,IAAI;AAC3B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,GAArB,EAA0BC,CAAC,EAA3B,EAA+B;AAC7B,aAAOF,QAAQ,CAACE,CAAD,CAAR,IAAeD,GAAG,GAAGC,CAAN,KAAY,CAAlC,EAAqC;AACnC,YAAI,CAACG,OAAO,CAACE,QAAR,CAAiBL,CAAjB,CAAL,EAA0BG,OAAO,CAACG,IAAR,CAAaN,CAAb;AAC1BD,QAAAA,GAAG,IAAIC,CAAP;AACD;AACF;;AACD,WAAOG,OAAP;AACD,GARD;;AAUAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAa,CAAC,YAAD,CAAzB,EApBuB,CAoBmB;;AAC1C,MAAIK,iBAAiB,GAAGN,OAAO,CAACO,MAAR,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,GAAGC,CAAJ,GAAQD,CAAR,GAAYC,CAAtC,CAAxB,CArBuB,CAqB4C;;AACnEL,EAAAA,OAAO,CAACC,GAAR,CAAYC,iBAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,iBAAJ,CARF,CADF,CADF;AAcD,CAtCD;;AAwCA,eAAeZ,UAAf","sourcesContent":["const Problem003 = () => {\r\n  const is_Prime = num => {\r\n    for (let i = 2; i < Math.sqrt(num); i++) {\r\n      if (num % i == 0) return false;\r\n\r\n      return true;\r\n    }\r\n  };\r\n\r\n  let factors = [];\r\n  const prime_factors = num => {\r\n    for (let i = 2; i <= num; i++) {\r\n      while (is_Prime(i) && num % i === 0) {\r\n        if (!factors.includes(i)) factors.push(i);\r\n        num /= i;\r\n      }\r\n    }\r\n    return factors;\r\n  };\r\n\r\n  console.log(prime_factors(600851475143)); // all prime factors\r\n  let max_prime_factors = factors.reduce((a, b) => (a > b ? a : b)); // max prime factors\r\n  console.log(max_prime_factors);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Largest prime factor</h3>\r\n        <span>Problem 3</span>\r\n        <p>\r\n          The prime factors of 13195 are 5, 7, 13 and 29. What is the largest\r\n          prime factor of the number 600851475143 ?\r\n        </p>\r\n        <span>Solution</span>\r\n        <p>{max_prime_factors}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Problem003;\r\n"]},"metadata":{},"sourceType":"module"}