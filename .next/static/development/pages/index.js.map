{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///./Component/Problem001/Problem001.js","webpack:///./Component/Problem002/Problem002.js","webpack:///./Component/Problem003/Problem003.js","webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///delegated ./node_modules/react/index.js from dll-reference dll_5f137288facb1107b491","webpack:///./pages/index.js","webpack:///external \"dll_5f137288facb1107b491\""],"sourcesContent":["const Problem001 = () => {\r\n  let arr = [];\r\n  for (let i = 0; i < 1000; i++) {\r\n    if (i % 3 == 0 || i % 5 == 0) {\r\n      arr.push(i);\r\n    }\r\n  }\r\n  const sum = arr.reduce((a, r) => a + r);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Multiples of 3 and 5</h3>\r\n        <span>Problem 1</span>\r\n        <p>\r\n          If we list all the natural numbers below 10 that are multiples of 3 or\r\n          5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the\r\n          sum of all the multiples of 3 or 5 below 1000.\r\n        </p>\r\n        <span>Solution</span>\r\n        <p>{sum}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Problem001;\r\n","const Problem002 = () => {\r\n  function fibonacci(n) {\r\n    return n <= 1 ? 1\r\n         : n == 2 ? 2\r\n         : fibonacci(n - 1) + fibonacci(n - 2);\r\n }\r\n \r\n console.log(fibonacci(4));\r\n let count = 1;\r\n let arr_fib=[];\r\n  while(fibonacci(count)<4000000){\r\n  arr_fib.push(fibonacci(count));\r\n  count++\r\n  }\r\n  \r\n  console.log(arr_fib);\r\n let  arr_fib_even = []; \r\n  arr_fib.map(data =>{\r\n  if(data %2 ==0){\r\n  arr_fib_even.push(data);\r\n  }\r\n  } )\r\n  \r\n  console.log(arr_fib_even);\r\n  \r\n let arr_fib_even_sum= arr_fib_even.reduce((a,r)=> a+r);\r\n console.log(arr_fib_even_sum);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Even Fibonacci numbers</h3>\r\n        <span>Problem 2</span>\r\n        <p>\r\n        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\r\n\r\n1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\r\n\r\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\r\n        </p>\r\n        <span>Solution</span>\r\n        <p>{arr_fib_even_sum}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Problem002;\r\n","const Problem003 = () => {\r\n  const is_Prime = num => {\r\n    for (let i = 2; i < Math.sqrt(num); i++) {\r\n      if (num % i == 0) return false;\r\n\r\n      return true;\r\n    }\r\n  };\r\n\r\n  let factors = [];\r\n  const prime_factors = num => {\r\n    for (let i = 2; i <= num; i++) {\r\n      while (is_Prime(i) && num % i === 0) {\r\n        if (!factors.includes(i)) factors.push(i);\r\n        num /= i;\r\n      }\r\n    }\r\n    return factors;\r\n  };\r\n\r\n  console.log(prime_factors(600851475143)); // all prime factors\r\n  let max_prime_factors = factors.reduce((a, b) => (a > b ? a : b)); // max prime factors\r\n  console.log(max_prime_factors);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Largest prime factor</h3>\r\n        <span>Problem 3</span>\r\n        <p>\r\n          The prime factors of 13195 are 5, 7, 13 and 29. What is the largest\r\n          prime factor of the number 600851475143 ?\r\n        </p>\r\n        <span>Solution</span>\r\n        <p>{max_prime_factors}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Problem003;\r\n","\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/\", function() {\n      var mod = require(\"C:\\\\Users\\\\mpatel\\\\source\\\\project\\\\projectEuler100\\\\pages\\\\index.js\")\n      if(module.hot) {\n        module.hot.accept(\"C:\\\\Users\\\\mpatel\\\\source\\\\project\\\\projectEuler100\\\\pages\\\\index.js\", function() {\n          if(!next.router.components[\"/\"]) return\n          var updatedPage = require(\"C:\\\\Users\\\\mpatel\\\\source\\\\project\\\\projectEuler100\\\\pages\\\\index.js\")\n          next.router.update(\"/\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","module.exports = (__webpack_require__(/*! dll-reference dll_5f137288facb1107b491 */ \"dll-reference dll_5f137288facb1107b491\"))(\"./node_modules/react/index.js\");","import Problem001 from \"../Component/Problem001/Problem001\";\r\nimport Problem002 from \"../Component/Problem002/Problem002\";\r\nimport Problem003 from \"../Component/Problem003/Problem003\";\r\n\r\nconst App = () => (\r\n  <>\r\n   <h1>#ProjectEuler100</h1>\r\n    <Problem001 />\r\n    <Problem002 />\r\n    <Problem003 />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","module.exports = dll_5f137288facb1107b491;"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;ACbA;;;;A","sourceRoot":""}