{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.8039f9d1d9390deac8f6.hot-update.js","sources":["webpack:///./Component/Problem002/Problem002.js"],"sourcesContent":["const Problem002 = () => {\r\n  function fibonacci(n) {\r\n    return n <= 1 ? 1\r\n         : n == 2 ? 2\r\n         : fibonacci(n - 1) + fibonacci(n - 2);\r\n }\r\n \r\n console.log(fibonacci(4));\r\n let count = 1;\r\n let arr_fib=[];\r\n  while(fibonacci(count)<4000000){\r\n  arr_fib.push(fibonacci(count));\r\n  count++\r\n  }\r\n  \r\n  console.log(arr_fib);\r\n let  arr_fib_even = []; \r\n  arr_fib.map(data =>{\r\n  if(data %2 ==0){\r\n  arr_fib_even.push(data);\r\n  }\r\n  } )\r\n  \r\n  console.log(arr_fib_even);\r\n  \r\n let arr_fib_even_sum= arr_fib_even.reduce((a,r)=> a+r);\r\n console.log(arr_fib_even_sum);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Even Fibonacci numbers</h3>\r\n        <span>Problem 2</span>\r\n        <p>\r\n        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\r\n\r\n1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\r\n\r\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\r\n        </p>\r\n        <span>Solution</span>\r\n        <p>{arr_fib_even_sum}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Problem002;\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}